{
    "name": "amazonaws-com-serverlessrepo-connector",
    "version": "2017.0.0",
    "description": "The AWS Serverless Application Repository makes it easy for developers and\nenterprises to quickly find and deploy serverless applications in the AWS Cloud.\nFor more information about serverless applications, see Serverless Computing and\nApplications on the AWS website.\n\nThe AWS Serverless Application Repository is deeply integrated with the AWS\nLambda console, so that developers of all levels can get started with serverless\ncomputing without needing to learn anything new. You can use category keywords\nto browse for applications such as web and mobile backends, data processing\napplications, or chatbots. You can also search for applications by name,\npublisher, or event source. To use an application, you simply choose it,\nconfigure any required fields, and deploy it with a few clicks. \n\nYou can also easily publish applications, sharing them publicly with the\ncommunity at large, or privately within your team or across your organization.\nTo publish a serverless application (or app), you can use the AWS Management\nConsole, AWS Command Line Interface (AWS CLI), or AWS SDKs to upload the code.\nAlong with the code, you upload a simple manifest file, also known as the AWS\nServerless Application Model (AWS SAM) template. For more information about AWS\nSAM, see AWS Serverless Application Model (AWS SAM) on the AWS Labs GitHub\nrepository.\n\nThe AWS Serverless Application Repository Developer Guide contains more\ninformation about the two developer experiences available:\n\n *  Consuming Applications – Browse for applications and view information about\n   them, including source code and readme files. Also install, configure, and\n   deploy applications of your choosing. \n   \n   Publishing Applications – Configure and upload applications to make them\n   available to other developers, and publish new versions of applications.",
    "main": "component.json",
    "dependencies": {
        "elasticio-node": "0.0.9",
        "elasticio-sailor-nodejs": "^2.2.1",
        "swagger-client": "^3.8.22"
    },
    "author": {
        "name": "Deutsche Telekom AG"
    },
    "license": "Apache-2.0"
}